{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/person.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addNameAndNumber","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","handleClickWithConfirm","name","number","onClick","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","del","id","delete","concat","update","put","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","showAll","errorMessage","setErrorMessage","useEffect","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","personObject","key","names","updateNumber","map","push","indexOf","returnedPerson","catch","error","setTimeout","window","confirm","updatedPerson","updatablePersonId","console","log","personName","personId","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30c8e9c4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n        Filter shown names with:  <input value={props.newFilter} onChange={props.handleFilterChange}/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addNameAndNumber}>\n        <div>\n          Name: <input value={props.newName} onChange={props.handleNameChange}/> \n        </div>\n        <div>\n          Number: <input value={props.newNumber} onChange={props.handleNumberChange}/> \n        </div>\n        <div>\n          <button type=\"submit\" >Add</button>\n        </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, handleClickWithConfirm }) => {\n  return (\n    <div>\n      {person.name} {person.number}  <button onClick={handleClickWithConfirm}>Delete</button>\n    </div>\n  )\n}\n// <button onClick={() => handleClickWithConfirm(person.name, person.id)}>{'delete'}</button>\nexport default Person\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\nconst deleteUrl = '/api/persons/delete/'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n  axios.delete(deleteUrl.concat(`${id}`))\n} \n\nconst update = (id, person) => {\n  axios.put(baseUrl.concat(`/${id}`), person)\n}\n\nconst personService = {\n    getAll,\n    create,\n    del,\n    update,\n  };\n\n  export default personService;","const Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport personService from './services/person'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [showAll] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const personsToShow = showAll ? persons : persons.filter(person => \n    person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const addNameAndNumber = (event) => {\n    event.preventDefault()\n    const personObject = {\n      key: newName,\n      name: newName,\n      number: newNumber\n    }\n\n    let names = []\n    let updateNumber = false\n\n    persons.map(person =>\n      names.push(person.name))\n\n    if (names.indexOf(newName) === -1) {\n      personService\n        .create(personObject)\n          .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setErrorMessage(`${newName} added to the phonebook!`)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n        })\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      } else {\n        updateNumber = window.confirm(`${newName} has already been added to the phonebook. Replace the old number with a new one?`)\n      }\n    \n    if (updateNumber) {\n      var updatedPerson = persons[names.indexOf(newName)]\n      var updatablePersonId = updatedPerson.id\n      updatedPerson.number = newNumber\n      console.log(updatedPerson)\n      personService\n        .update(updatablePersonId, {'name': newName, 'number': newNumber})\n        \n        setErrorMessage(`Number for ${newName} was succesfully changed!`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleClickWithConfirm = (personName, personId) => {\n    let result = false\n    result = window.confirm(`Are you sure you want to delete ${personName}?`);\n    if (result) {\n      personService.del(personId)\n      setPersons(persons.filter(p => p.id !== personId))\n    }\n  }\n  return (\n    <div>\n      <Notification message={errorMessage} />\n      <h2>Phonebook</h2>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      \n      <h3>Add a new</h3>\n\n      <PersonForm addNameAndNumber={addNameAndNumber} \n      newName={newName} handleNameChange={handleNameChange}\n      newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n\n      <h3>Numbers</h3>\n      \n      {personsToShow.map(person =>\n          <Person key={person.name} person={person} id = {person.id} \n          handleClickWithConfirm={() => handleClickWithConfirm(person.name, person.id)}/> \n        )}\n      \n\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}